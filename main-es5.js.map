{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","translate","addLangs","setDefaultLang","browserLang","getBrowserLang","use","match","selector","templateUrl","styleUrls","HttpLoaderFactory","http","AppModule","loader","provide","useFactory","deps","declarations","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { NgModule } from '@angular/core';\n\nimport { TranslateService } from '@ngx-translate/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n constructor(public translate: TranslateService) {\n   translate.addLangs(['en', 'fr','hn','spn']);\n   translate.setDefaultLang('en');\n   const browserLang = translate.getBrowserLang();\n   translate.use(browserLang.match(/en|fr|hn|spn/) ? browserLang : 'en');\n }\n}\n"," <div>\n  <h1 class=\"hd1\">{{ 'HOME.TITLE' | translate }}</h1>\n  <h2 class=\"hd3\">\n    {{ 'HOME.TEXT' | translate }}\n  </h2>\n  <h3 class=\"hd4\">\n    {{ 'HOME.TEXT1' | translate }}\n  </h3>\n   <div class=\"dv1\">\n    <label for=\"\" class=\"lbl\">\n      {{ 'HOME.SELECT' | translate }}\n      <select #langselect (change)=\"translate.use(langselect.value)\" class=\"sel\">\n        <option *ngFor=\"let lang of translate.getLangs()\" [value]=\"lang\">{{ lang }}\n          \n        </option>\n      </select>\n    </label>\n   </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nexport function HttpLoaderFactory(http: HttpClient){\n  return new TranslateHttpLoader(http);\n}\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps:[HttpClient]\n      }\n    }),\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}